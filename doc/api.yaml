openapi: 3.0.0
paths:
  /:
    get:
      operationId: AppController_getHello
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - App
  /user:
    post:
      operationId: UserController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserDto'
      responses:
        '201':
          description: The record has been successfully created.
        '400':
          description: Bad request.
      tags:
        - User
    get:
      operationId: UserController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - User
  /user/{id}:
    get:
      operationId: UserController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - User
    put:
      operationId: UserController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserDto'
      responses:
        '200':
          description: ''
      tags:
        - User
    delete:
      operationId: UserController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - User
  /track:
    post:
      operationId: TrackController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTrackDto'
      responses:
        '201':
          description: The record has been successfully created.
        '400':
          description: Bad request.
      tags:
        - Track
    get:
      operationId: TrackController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Track
  /track/{id}:
    get:
      operationId: TrackController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Track
    put:
      operationId: TrackController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTrackDto'
      responses:
        '200':
          description: ''
      tags:
        - Track
    delete:
      operationId: TrackController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Track
  /artist:
    post:
      operationId: ArtistController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateArtistDto'
      responses:
        '201':
          description: The record has been successfully created.
        '400':
          description: Bad request.
      tags:
        - Artist
    get:
      operationId: ArtistController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Artist
  /artist/{id}:
    get:
      operationId: ArtistController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Artist
    put:
      operationId: ArtistController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateArtistDto'
      responses:
        '200':
          description: ''
      tags:
        - Artist
    delete:
      operationId: ArtistController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Artist
  /album:
    post:
      operationId: AlbumController_create
      parameters: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAlbumDto'
      responses:
        '201':
          description: The record has been successfully created.
        '400':
          description: Bad request.
      tags:
        - Album
    get:
      operationId: AlbumController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Album
  /album/{id}:
    get:
      operationId: AlbumController_findOne
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '200':
          description: ''
      tags:
        - Album
    put:
      operationId: AlbumController_update
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateAlbumDto'
      responses:
        '200':
          description: ''
      tags:
        - Album
    delete:
      operationId: AlbumController_remove
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Album
  /favs:
    get:
      operationId: FavoritesController_findAll
      parameters: []
      responses:
        '200':
          description: ''
      tags:
        - Favorites
  /favs/track/{id}:
    post:
      operationId: FavoritesController_addTrackToFavorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeTrackFromFavorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
  /favs/album/{id}:
    post:
      operationId: FavoritesController_addAlbumToFavorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeAlbumFromFavorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
  /favs/artist/{id}:
    post:
      operationId: FavoritesController_addArtistToFavorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '201':
          description: ''
      tags:
        - Favorites
    delete:
      operationId: FavoritesController_removeArtistFromFavorites
      parameters:
        - name: id
          required: true
          in: path
          schema:
            type: string
      responses:
        '204':
          description: ''
      tags:
        - Favorites
info:
  title: Home Library Service
  description: Home music library service
  version: 1.0.0
  contact: {}
tags: []
servers: []
components:
  schemas:
    CreateUserDto:
      type: object
      properties:
        login:
          type: string
          description: User name
        password:
          type: string
          description: User name
      required:
        - login
        - password
    UpdateUserDto:
      type: object
      properties: {}
    CreateTrackDto:
      type: object
      properties:
        name:
          type: string
          description: Track name
        artistId:
          type: string
          description: Link to Artist
        albumId:
          type: string
          description: Link to Album
        duration:
          type: string
          description: Track duration (sec)
      required:
        - name
        - artistId
        - albumId
        - duration
    UpdateTrackDto:
      type: object
      properties: {}
    CreateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Artist name
        grammy:
          type: string
          description: Is artist has grammy award?
      required:
        - name
        - grammy
    UpdateArtistDto:
      type: object
      properties:
        name:
          type: string
          description: Artist name
        grammy:
          type: string
          description: Is artist has grammy award?
        id:
          type: string
    CreateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: Album name
        year:
          type: number
          description: Album year
        artistId:
          type: string
          description: Link to Artist
      required:
        - name
        - year
        - artistId
    UpdateAlbumDto:
      type: object
      properties:
        name:
          type: string
          description: Album name
        year:
          type: number
          description: Album year
        artistId:
          type: string
          description: Link to Artist
        id:
          type: string
